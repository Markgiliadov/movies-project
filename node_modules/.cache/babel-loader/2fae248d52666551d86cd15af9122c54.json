{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/markgiliadov/my-imdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"/Users/markgiliadov/my-imdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/markgiliadov/my-imdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/markgiliadov/my-imdb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useState,useEffect}from\"react\";var useFetch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(props,searchInput){var _useState,_useState2,stateMovies,setStateMovies,FetchingTheMovies;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_useState=useState([]),_useState2=_slicedToArray(_useState,2),stateMovies=_useState2[0],setStateMovies=_useState2[1];//   let myInput = searchInput;\n//   console.log(myInput);\nuseEffect(function(){function fetch(){return _fetch.apply(this,arguments);}function _fetch(){_fetch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return FetchingTheMovies(searchInput);case 2:case\"end\":return _context.stop();}}},_callee);}));return _fetch.apply(this,arguments);}fetch();// return setStateMovies([]);\n},[searchInput]);FetchingTheMovies=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(searchInput){var movieUrl,myMovies,id_info,urlString,baseUrl,midUrl,endUrl,_iterator2,_step2,_step2$value,i,id;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:movieUrl=\"\";myMovies=[];id_info=[];urlString=\"\";baseUrl=\"\";midUrl=\"\";endUrl=\"\";if(!(searchInput!==\"\"||!props.isSearched)){_context4.next=36;break;}console.log(props.baseSearchUrl);if(props.baseSearchUrl){baseUrl=props.baseSearchUrl;midUrl=searchInput;endUrl=props.API_KEY_SEARCH;}else{baseUrl=props.baseNotSearchedUrl;endUrl=props.API_KEY_MOVIE;}console.log(baseUrl);urlString=baseUrl.concat(midUrl,endUrl);console.log(\"url \"+urlString+\"inp is: \"+searchInput);_context4.next=15;return fetch(urlString)// need to give urlString\n.then(function(res){return res.json();}).then(function(json){var _iterator=_createForOfIteratorHelper(json.results.entries()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),i=_step$value[0],result=_step$value[1];id_info[i]=result.id;}}catch(err){_iterator.e(err);}finally{_iterator.f();}}).catch(function(error){return console.log(error);});case 15:console.log(\"i am here\"+id_info);_iterator2=_createForOfIteratorHelper(id_info.entries());_context4.prev=17;_iterator2.s();case 19:if((_step2=_iterator2.n()).done){_context4.next=28;break;}_step2$value=_slicedToArray(_step2.value,2),i=_step2$value[0],id=_step2$value[1];movieUrl=props.baseMovieUrl+id+props.API_KEY_MOVIE;console.log(movieUrl);_context4.next=25;return fetch(movieUrl).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return res.json();case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x4){return _ref3.apply(this,arguments);};}()).then(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(json){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return json;case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5){return _ref4.apply(this,arguments);};}());case 25:myMovies[i]=_context4.sent;case 26:_context4.next=19;break;case 28:_context4.next=33;break;case 30:_context4.prev=30;_context4.t0=_context4[\"catch\"](17);_iterator2.e(_context4.t0);case 33:_context4.prev=33;_iterator2.f();return _context4.finish(33);case 36:setStateMovies([].concat(myMovies));case 37:case\"end\":return _context4.stop();}}},_callee4,null,[[17,30,33,36]]);}));return function FetchingTheMovies(_x3){return _ref2.apply(this,arguments);};}();console.log(stateMovies);return _context5.abrupt(\"return\",stateMovies);case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function useFetch(_x,_x2){return _ref.apply(this,arguments);};}();export default useFetch;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/useFetch.js"],"names":["useState","useEffect","useFetch","props","searchInput","stateMovies","setStateMovies","fetch","FetchingTheMovies","movieUrl","myMovies","id_info","urlString","baseUrl","midUrl","endUrl","isSearched","console","log","baseSearchUrl","API_KEY_SEARCH","baseNotSearchedUrl","API_KEY_MOVIE","concat","then","res","json","results","entries","i","result","id","catch","error","baseMovieUrl"],"mappings":"6lBAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,QAAQ,0FAAG,kBAAOC,KAAP,CAAcC,WAAd,sMACuBJ,QAAQ,CAAC,EAAD,CAD/B,wCACRK,WADQ,eACKC,cADL,eAEf;AACA;AACAL,SAAS,CAAC,UAAM,SACCM,CAAAA,KADD,yHACd,yJACQC,CAAAA,iBAAiB,CAACJ,WAAD,CADzB,uDADc,wCAIdG,KAAK,GACL;AACD,CANQ,CAMN,CAACH,WAAD,CANM,CAAT,CAOMI,iBAXS,2FAWW,kBAAOJ,WAAP,wNACpBK,QADoB,CACT,EADS,CAEpBC,QAFoB,CAET,EAFS,CAGpBC,OAHoB,CAGV,EAHU,CAIpBC,SAJoB,CAIR,EAJQ,CAKpBC,OALoB,CAKV,EALU,CAMpBC,MANoB,CAMX,EANW,CAOpBC,MAPoB,CAOX,EAPW,MAQpBX,WAAW,GAAK,EAAhB,EAAsB,CAACD,KAAK,CAACa,UART,4BAStBC,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACgB,aAAlB,EACA,GAAIhB,KAAK,CAACgB,aAAV,CAAyB,CACvBN,OAAO,CAAGV,KAAK,CAACgB,aAAhB,CACAL,MAAM,CAAGV,WAAT,CACAW,MAAM,CAAGZ,KAAK,CAACiB,cAAf,CACD,CAJD,IAIO,CACLP,OAAO,CAAGV,KAAK,CAACkB,kBAAhB,CAEAN,MAAM,CAAGZ,KAAK,CAACmB,aAAf,CACD,CACDL,OAAO,CAACC,GAAR,CAAYL,OAAZ,EACAD,SAAS,CAAGC,OAAO,CAACU,MAAR,CAAeT,MAAf,CAAuBC,MAAvB,CAAZ,CACAE,OAAO,CAACC,GAAR,CAAY,OAASN,SAAT,CAAqB,UAArB,CAAkCR,WAA9C,EArBsB,wBAsBhBG,CAAAA,KAAK,CAACK,SAAD,CAAY;AAAjB,CACHY,IADG,CACE,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADF,EAEHF,IAFG,CAEE,SAACE,IAAD,CAAU,0CACYA,IAAI,CAACC,OAAL,CAAaC,OAAb,EADZ,YACd,+CAAkD,+CAAtCC,CAAsC,gBAAnCC,MAAmC,gBAChDnB,OAAO,CAACkB,CAAD,CAAP,CAAaC,MAAM,CAACC,EAApB,CACD,CAHa,qDAIf,CANG,EAOHC,KAPG,CAOG,SAACC,KAAD,QAAWhB,CAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ,CAAX,EAPH,CAtBgB,SA8BtBhB,OAAO,CAACC,GAAR,CAAY,YAAcP,OAA1B,EA9BsB,sCA+BAA,OAAO,CAACiB,OAAR,EA/BA,iJA+BVC,CA/BU,iBA+BPE,EA/BO,iBAgCpBtB,QAAQ,CAAGN,KAAK,CAAC+B,YAAN,CAAqBH,EAArB,CAA0B5B,KAAK,CAACmB,aAA3C,CACAL,OAAO,CAACC,GAAR,CAAYT,QAAZ,EAjCoB,wBAkCAF,CAAAA,KAAK,CAACE,QAAD,CAAL,CACjBe,IADiB,2FACZ,kBAAOC,GAAP,6IAAqBA,CAAAA,GAAG,CAACC,IAAJ,EAArB,iHADY,kEAEjBF,IAFiB,2FAEZ,kBAAOE,IAAP,6IAAsBA,CAAAA,IAAtB,iHAFY,iEAlCA,SAkCpBhB,QAAQ,CAACmB,CAAD,CAlCY,sPAuCxBvB,cAAc,WAAKI,QAAL,EAAd,CAvCwB,8EAXX,kBAWTF,CAAAA,iBAXS,+CAoDfS,OAAO,CAACC,GAAR,CAAYb,WAAZ,EApDe,iCAqDRA,WArDQ,0DAAH,kBAARH,CAAAA,QAAQ,gDAAd,CAwDA,cAAeA,CAAAA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = async (props, searchInput) => {\n  const [stateMovies, setStateMovies] = useState([]);\n  //   let myInput = searchInput;\n  //   console.log(myInput);\n  useEffect(() => {\n    async function fetch() {\n      await FetchingTheMovies(searchInput);\n    }\n    fetch();\n    // return setStateMovies([]);\n  }, [searchInput]);\n  const FetchingTheMovies = async (searchInput) => {\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = [];\n    let urlString = \"\";\n    let baseUrl = \"\";\n    let midUrl = \"\";\n    let endUrl = \"\";\n    if (searchInput !== \"\" || !props.isSearched) {\n      console.log(props.baseSearchUrl);\n      if (props.baseSearchUrl) {\n        baseUrl = props.baseSearchUrl;\n        midUrl = searchInput;\n        endUrl = props.API_KEY_SEARCH;\n      } else {\n        baseUrl = props.baseNotSearchedUrl;\n\n        endUrl = props.API_KEY_MOVIE;\n      }\n      console.log(baseUrl);\n      urlString = baseUrl.concat(midUrl, endUrl);\n      console.log(\"url \" + urlString + \"inp is: \" + searchInput);\n      await fetch(urlString) // need to give urlString\n        .then((res) => res.json())\n        .then((json) => {\n          for (const [i, result] of json.results.entries()) {\n            id_info[i] = result.id;\n          }\n        })\n        .catch((error) => console.log(error));\n      console.log(\"i am here\" + id_info);\n      for (const [i, id] of id_info.entries()) {\n        movieUrl = props.baseMovieUrl + id + props.API_KEY_MOVIE;\n        console.log(movieUrl);\n        myMovies[i] = await fetch(movieUrl)\n          .then(async (res) => await res.json())\n          .then(async (json) => await json);\n      }\n    }\n    setStateMovies([...myMovies]);\n  };\n  console.log(stateMovies);\n  return stateMovies;\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}