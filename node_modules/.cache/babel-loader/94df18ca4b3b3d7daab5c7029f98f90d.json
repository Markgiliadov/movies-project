{"ast":null,"code":"var _jsxFileName = \"/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js\";\nimport React, { useEffect, useState } from \"react\";\n\nconst GeneralMovies = props => {\n  const [stateIds, setStateIds] = useState([]);\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(true);\n  let searchInput = \"hero\";\n  useEffect(async () => {\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = []; // let myMovies = [];\n    // let finalMovies = [];\n\n    let urlString = \"\"; // let searchInput = props.searchBar.props.onChange();\n\n    console.log(props.baseSearchUrl + \"api\" + props.API_KEY_SEARCH);\n    if (searchInput !== \"\") urlString = props.baseSearchUrl.concat(searchInput, props.API_KEY_SEARCH);\n    console.log(urlString);\n    await fetch(urlString) // need to give urlString\n    .then(res => res.json()).then(json => {\n      // console.log(json);\n      for (const [i, result] of json.results.entries()) {\n        // console.log(\"index\" + i + \"value\" + result.id);\n        id_info[i] = result.id; //   console.log(result);\n        //   const myId = result.id;\n\n        setStateIds(prevIds => [...id_info]);\n      } // id_info = json.results.map((result) => {\n      //   return result.id; // returning id's of movies\n      // });\n\n    }); // .catch((error) => console.log(error));\n\n    console.log(id_info); // console.log(inputReady);\n\n    console.log(stateIds);\n    console.log(props.baseMovieUrl + \"fake id\" + props.API_KEY_MOVIE);\n\n    for (const [i, id] of stateIds.entries()) {\n      movieUrl = props.baseMovieUrl + id + props.API_KEY_MOVIE;\n      console.log(\"i? \" + i + \" val? \" + id);\n      myMovies[i] = await fetch(movieUrl).then(res => res.json()).then(json => {\n        // console.log(json);\n        console.log(\"index \" + i + \"val \" + json);\n        return json;\n      });\n      console.log(myMovies);\n      setStateMovies(myMovies);\n      console.log(stateMovies);\n    }\n\n    console.log(stateMovies);\n    setInputEntered(true);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default GeneralMovies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js"],"names":["React","useEffect","useState","GeneralMovies","props","stateIds","setStateIds","stateMovies","setStateMovies","inputEntered","setInputEntered","searchInput","movieUrl","myMovies","id_info","urlString","console","log","baseSearchUrl","API_KEY_SEARCH","concat","fetch","then","res","json","i","result","results","entries","id","prevIds","baseMovieUrl","API_KEY_MOVIE"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;AACA,MAAIS,WAAW,GAAG,MAAlB;AAEAV,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIW,QAAQ,GAAG,EAAf;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,OAAO,GAAG,EAAd,CAHoB,CAIpB;AACA;;AACA,QAAIC,SAAS,GAAG,EAAhB,CANoB,CAOpB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,aAAN,GAAsB,KAAtB,GAA8Bd,KAAK,CAACe,cAAhD;AACA,QAAIR,WAAW,KAAK,EAApB,EACEI,SAAS,GAAGX,KAAK,CAACc,aAAN,CAAoBE,MAApB,CAA2BT,WAA3B,EAAwCP,KAAK,CAACe,cAA9C,CAAZ;AAEFH,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,UAAMM,KAAK,CAACN,SAAD,CAAL,CAAiB;AAAjB,KACHO,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGE,IAAD,IAAU;AACd;AACA,WAAK,MAAM,CAACC,CAAD,EAAIC,MAAJ,CAAX,IAA0BF,IAAI,CAACG,OAAL,CAAaC,OAAb,EAA1B,EAAkD;AAChD;AACAd,QAAAA,OAAO,CAACW,CAAD,CAAP,GAAaC,MAAM,CAACG,EAApB,CAFgD,CAGhD;AACA;;AACAvB,QAAAA,WAAW,CAAEwB,OAAD,IAAa,CAAC,GAAGhB,OAAJ,CAAd,CAAX;AACD,OARa,CASd;AACA;AACA;;AACD,KAdG,CAAN,CAboB,CA4BpB;;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EA7BoB,CA8BpB;;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAAC2B,YAAN,GAAqB,SAArB,GAAiC3B,KAAK,CAAC4B,aAAnD;;AACA,SAAK,MAAM,CAACP,CAAD,EAAII,EAAJ,CAAX,IAAsBxB,QAAQ,CAACuB,OAAT,EAAtB,EAA0C;AACxChB,MAAAA,QAAQ,GAAGR,KAAK,CAAC2B,YAAN,GAAqBF,EAArB,GAA0BzB,KAAK,CAAC4B,aAA3C;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQQ,CAAR,GAAY,QAAZ,GAAuBI,EAAnC;AACAhB,MAAAA,QAAQ,CAACY,CAAD,CAAR,GAAc,MAAMJ,KAAK,CAACT,QAAD,CAAL,CACjBU,IADiB,CACXC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADG,EAEjBF,IAFiB,CAEXE,IAAD,IAAU;AACd;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAWQ,CAAX,GAAe,MAAf,GAAwBD,IAApC;AACA,eAAOA,IAAP;AACD,OANiB,CAApB;AAOAR,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAL,MAAAA,cAAc,CAACK,QAAD,CAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AACD;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AACAG,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAlDQ,EAkDN,EAlDM,CAAT;AAmDA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA1DD;;AA4DA,eAAeP,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst GeneralMovies = (props) => {\n  const [stateIds, setStateIds] = useState([]);\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(true);\n  let searchInput = \"hero\";\n\n  useEffect(async () => {\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = [];\n    // let myMovies = [];\n    // let finalMovies = [];\n    let urlString = \"\";\n    // let searchInput = props.searchBar.props.onChange();\n    console.log(props.baseSearchUrl + \"api\" + props.API_KEY_SEARCH);\n    if (searchInput !== \"\")\n      urlString = props.baseSearchUrl.concat(searchInput, props.API_KEY_SEARCH);\n\n    console.log(urlString);\n    await fetch(urlString) // need to give urlString\n      .then((res) => res.json())\n      .then((json) => {\n        // console.log(json);\n        for (const [i, result] of json.results.entries()) {\n          // console.log(\"index\" + i + \"value\" + result.id);\n          id_info[i] = result.id;\n          //   console.log(result);\n          //   const myId = result.id;\n          setStateIds((prevIds) => [...id_info]);\n        }\n        // id_info = json.results.map((result) => {\n        //   return result.id; // returning id's of movies\n        // });\n      });\n    // .catch((error) => console.log(error));\n    console.log(id_info);\n    // console.log(inputReady);\n\n    console.log(stateIds);\n    console.log(props.baseMovieUrl + \"fake id\" + props.API_KEY_MOVIE);\n    for (const [i, id] of stateIds.entries()) {\n      movieUrl = props.baseMovieUrl + id + props.API_KEY_MOVIE;\n      console.log(\"i? \" + i + \" val? \" + id);\n      myMovies[i] = await fetch(movieUrl)\n        .then((res) => res.json())\n        .then((json) => {\n          // console.log(json);\n          console.log(\"index \" + i + \"val \" + json);\n          return json;\n        });\n      console.log(myMovies);\n      setStateMovies(myMovies);\n      console.log(stateMovies);\n    }\n    console.log(stateMovies);\n    setInputEntered(true);\n  }, []);\n  return <div></div>;\n};\n\nexport default GeneralMovies;\n"]},"metadata":{},"sourceType":"module"}