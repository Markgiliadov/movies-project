{"ast":null,"code":"// import React, { useEffect } from \"react\";\n// import Auxil from \"../../../hoc/Auxil/Auxil\";\n// const genericMovies = (props) => {\n//   // useEffect(console.log(fetchedMovies));\n//   const fetchedMovies = async () => {\n//     let movieUrl = \"\";\n//     let myMovies = [];\n//     let id_info = [];\n//     let finalMovies = [];\n//     let urlString = \"\";\n//     // if (searchInput !== \"\") {\n//       // urlString = props.baseSearchUrl.concat(searchInput, props.API_KEY_SEARCH);\n//       //   else if(){\n//       // }\n//       // else if(){}\n//       await fetch(urlString) // need to give urlString\n//         .then((res) => res.json())\n//         .then((json) => {\n//           console.log(json);\n//           id_info = json.results.map((result) => {\n//             return result.id; // returning id's of movies\n//           });\n//         })\n//         .catch((error) => console.log(error));\n//       // console.log(id_info);\n//       //   this.setState({\n//       //     movies_ids: id_info, // setting an array of id's\n//       //   });\n//       id_info.map(async (id, index) => {\n//         movieUrl = props.baseMovieUrl + id + props.API_KEY_MOVIE; // creating a movie from the id given\n//         myMovies[index] = await fetch(movieUrl)\n//           .then((res) => res.json())\n//           .then((json) => {\n//             // console.log(json);\n//             return json; // returning movie at an index location\n//           });\n//         // finalMovies = myMovies;\n//         console.log(finalMovies);\n//         // .catch((error) => {\n//         //   console.log(error);\n//         // })\n//         // this.setState({\n//         //   movies: myMovies,\n//         // });\n//         // console.log(this.state.movies);\n//         this.setState({\n//           movies: myMovies,\n//         });\n//       });\n//       console.log(myMovies);\n//       // return finalMovies;\n//       console.log(this.state.movies);\n//       // });\n//       this.setState({ inputEntered: true });\n//     }\n//   };\n//   return <Auxil>{props.children}</Auxil>;\n// };\n// export default genericMovies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GenericMovies.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useEffect } from \"react\";\n// import Auxil from \"../../../hoc/Auxil/Auxil\";\n// const genericMovies = (props) => {\n//   // useEffect(console.log(fetchedMovies));\n//   const fetchedMovies = async () => {\n//     let movieUrl = \"\";\n//     let myMovies = [];\n//     let id_info = [];\n//     let finalMovies = [];\n//     let urlString = \"\";\n\n//     // if (searchInput !== \"\") {\n//       // urlString = props.baseSearchUrl.concat(searchInput, props.API_KEY_SEARCH);\n\n//       //   else if(){\n//       // }\n//       // else if(){}\n\n//       await fetch(urlString) // need to give urlString\n//         .then((res) => res.json())\n//         .then((json) => {\n//           console.log(json);\n//           id_info = json.results.map((result) => {\n//             return result.id; // returning id's of movies\n//           });\n//         })\n//         .catch((error) => console.log(error));\n//       // console.log(id_info);\n//       //   this.setState({\n//       //     movies_ids: id_info, // setting an array of id's\n//       //   });\n//       id_info.map(async (id, index) => {\n//         movieUrl = props.baseMovieUrl + id + props.API_KEY_MOVIE; // creating a movie from the id given\n//         myMovies[index] = await fetch(movieUrl)\n//           .then((res) => res.json())\n//           .then((json) => {\n//             // console.log(json);\n//             return json; // returning movie at an index location\n//           });\n//         // finalMovies = myMovies;\n//         console.log(finalMovies);\n//         // .catch((error) => {\n//         //   console.log(error);\n//         // })\n//         // this.setState({\n//         //   movies: myMovies,\n//         // });\n//         // console.log(this.state.movies);\n//         this.setState({\n//           movies: myMovies,\n//         });\n//       });\n//       console.log(myMovies);\n//       // return finalMovies;\n\n//       console.log(this.state.movies);\n//       // });\n//       this.setState({ inputEntered: true });\n//     }\n//   };\n//   return <Auxil>{props.children}</Auxil>;\n// };\n// export default genericMovies;\n"]},"metadata":{},"sourceType":"module"}