{"ast":null,"code":"var _jsxFileName = \"/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js\";\nimport React, { useState } from \"react\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport SearchBar from \"../../../components/Searchbar/Searchbar\";\nimport useFetch from \"./useFetch\";\n\nconst GeneralMovies = props => {\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\"); //   let searchInput = \"jesus\";\n\n  let inputEnablerMsg = null;\n  let searchBar = null;\n  let movies = null;\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let myPath = \"\";\n  let data = useFetch(props, searchInput);\n\n  const handleChange = event => {\n    setSearchInput(event.target.value);\n  };\n\n  data = useFetch(props, searchInput);\n  Promise.resolve(data).then(val => {\n    if (val.length) {\n      setInputEntered(true);\n      setStateMovies(val);\n    }\n  });\n\n  if (inputEntered) {\n    movies = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, stateMovies.map((movie, index) => {\n      if (movie.poster_path) {\n        myPath = movie.poster_path;\n        console.log(movie);\n      } else if (movie.backdrop_path) myPath = movie.backdrop_path;else return /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }\n      }, \" NO IMAGE! sorry :(\");\n\n      return (\n        /*#__PURE__*/\n        // <div style={{ display: \"flex\" }}>\n        React.createElement(Movie, {\n          key: movie.id,\n          title: movie.title,\n          image: imgUrl + myPath,\n          description: movie.overview,\n          name: movie.title,\n          rating: movie.vote_average,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }\n        }) // </div>\n\n      );\n    }));\n  } else inputEnablerMsg = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }\n  }, \"Please! enter a search input above! :)\");\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), inputEnablerMsg, movies);\n};\n\nexport default GeneralMovies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js"],"names":["React","useState","Movie","SearchBar","useFetch","GeneralMovies","props","stateMovies","setStateMovies","inputEntered","setInputEntered","searchInput","setSearchInput","inputEnablerMsg","searchBar","movies","imgUrl","myPath","data","handleChange","event","target","value","Promise","resolve","then","val","length","map","movie","index","poster_path","console","log","backdrop_path","id","title","overview","vote_average"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C,CAH+B,CAI/B;;AACA,MAAIY,eAAe,GAAG,IAAtB;AACA,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,MAAM,GAAG,kCAAb;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,IAAI,GAAGd,QAAQ,CAACE,KAAD,EAAQK,WAAR,CAAnB;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9BR,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIAJ,EAAAA,IAAI,GAAGd,QAAQ,CAACE,KAAD,EAAQK,WAAR,CAAf;AACAY,EAAAA,OAAO,CAACC,OAAR,CAAgBN,IAAhB,EAAsBO,IAAtB,CAA4BC,GAAD,IAAS;AAClC,QAAIA,GAAG,CAACC,MAAR,EAAgB;AACdjB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,MAAAA,cAAc,CAACkB,GAAD,CAAd;AACD;AACF,GALD;;AAOA,MAAIjB,YAAJ,EAAkB;AAChBM,IAAAA,MAAM,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,WAAW,CAACqB,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACjC,UAAID,KAAK,CAACE,WAAV,EAAuB;AACrBd,QAAAA,MAAM,GAAGY,KAAK,CAACE,WAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,OAHD,MAGO,IAAIA,KAAK,CAACK,aAAV,EAAyBjB,MAAM,GAAGY,KAAK,CAACK,aAAf,CAAzB,KACF,oBAAO;AAAG,QAAA,GAAG,EAAEJ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;;AACL;AAAA;AACE;AACA,4BAAC,KAAD;AACE,UAAA,GAAG,EAAED,KAAK,CAACM,EADb;AAEE,UAAA,KAAK,EAAEN,KAAK,CAACO,KAFf;AAGE,UAAA,KAAK,EAAEpB,MAAM,GAAGC,MAHlB;AAIE,UAAA,WAAW,EAAEY,KAAK,CAACQ,QAJrB;AAKE,UAAA,IAAI,EAAER,KAAK,CAACO,KALd;AAME,UAAA,MAAM,EAAEP,KAAK,CAACS,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CAUE;;AAVF;AAYD,KAlBA,CADH,CADF;AAuBD,GAxBD,MAwBOzB,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAlB;;AAEP,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEM,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGGN,eAHH,EAIGE,MAJH,CADF;AAQD,CA1DD;;AA4DA,eAAeV,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport SearchBar from \"../../../components/Searchbar/Searchbar\";\nimport useFetch from \"./useFetch\";\nconst GeneralMovies = (props) => {\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  //   let searchInput = \"jesus\";\n  let inputEnablerMsg = null;\n  let searchBar = null;\n  let movies = null;\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let myPath = \"\";\n  let data = useFetch(props, searchInput);\n\n  const handleChange = (event) => {\n    setSearchInput(event.target.value);\n  };\n\n  data = useFetch(props, searchInput);\n  Promise.resolve(data).then((val) => {\n    if (val.length) {\n      setInputEntered(true);\n      setStateMovies(val);\n    }\n  });\n\n  if (inputEntered) {\n    movies = (\n      <div>\n        {stateMovies.map((movie, index) => {\n          if (movie.poster_path) {\n            myPath = movie.poster_path;\n            console.log(movie);\n          } else if (movie.backdrop_path) myPath = movie.backdrop_path;\n          else return <p key={index}> NO IMAGE! sorry :(</p>;\n          return (\n            // <div style={{ display: \"flex\" }}>\n            <Movie\n              key={movie.id}\n              title={movie.title}\n              image={imgUrl + myPath}\n              description={movie.overview}\n              name={movie.title}\n              rating={movie.vote_average}\n            />\n            // </div>\n          );\n        })}\n      </div>\n    );\n  } else inputEnablerMsg = <p>Please! enter a search input above! :)</p>;\n\n  return (\n    <div>\n      <SearchBar onChange={handleChange} />\n      {/* {searchBar} */}\n      {inputEnablerMsg}\n      {movies}\n    </div>\n  );\n};\n\nexport default GeneralMovies;\n"]},"metadata":{},"sourceType":"module"}