{"ast":null,"code":"var _jsxFileName = \"/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js\";\nimport React, { useState } from \"react\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport useFetch from \"./useFetch\";\nimport classes from \"./GeneralMovies.module.css\";\nimport No_img from \"../../../Assets/NoImg/no-image.png\";\nimport Searchbar from \"../../../components/Searchbar/Searchbar\";\n\nconst GeneralMovies = props => {\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  let inputEnablerMsg = null;\n  let movies = null;\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let myPath = \"\";\n  let data = null;\n  let style = null;\n  let searchBar = null;\n  let myStyle = null;\n\n  const searchMovie = event => {\n    const myInput = event.target.value;\n    setSearchInput(myInput); // if (myInput != \"\")\n    // else {\n    //   console.log(myInput);\n    // setInputEntered(() => false);\n    // }\n  };\n\n  data = useFetch(props, searchInput);\n  Promise.resolve(data).then(val => {\n    if (searchInput != \"\") {\n      setInputEntered(true);\n      setStateMovies(val);\n    } else setInputEntered(false); // if (searchInput == \"\") {\n    //   setInputEntered(false);\n    //   setStateMovies([]);\n    // }\n\n  });\n\n  if (!props.isSearched) {\n    myStyle = classes.style;\n    stateMovies.splice(0, stateMovies.length - 8);\n  } else searchBar = /*#__PURE__*/React.createElement(Searchbar, {\n    style: {\n      alignContent: \"center\"\n    },\n    onChange: searchMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  });\n\n  if (inputEntered) {\n    movies = /*#__PURE__*/React.createElement(\"div\", {\n      // style={{ display: \"flex\", alignContent: \"flex-start\" }}\n      className: myStyle // className={classes.style}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, stateMovies.map((movie, index) => {\n      if (movie.poster_path) {\n        myPath = movie.poster_path; // console.log(movie);\n      } else if (movie.backdrop_path) myPath = movie.backdrop_path;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Movie, {\n        isSearched: props.isSearched,\n        key: movie.id,\n        title: movie.title,\n        image: imgUrl + myPath,\n        description: movie.overview,\n        name: movie.title,\n        rating: movie.vote_average,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }));\n    }));\n  } else inputEnablerMsg = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 28\n    }\n  }, \"Please! enter a search input above! :)\");\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, searchBar, inputEnablerMsg, movies);\n};\n\nexport default GeneralMovies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js"],"names":["React","useState","Movie","useFetch","classes","No_img","Searchbar","GeneralMovies","props","stateMovies","setStateMovies","inputEntered","setInputEntered","searchInput","setSearchInput","inputEnablerMsg","movies","imgUrl","myPath","data","style","searchBar","myStyle","searchMovie","event","myInput","target","value","Promise","resolve","then","val","isSearched","splice","length","alignContent","map","movie","index","poster_path","backdrop_path","id","title","overview","vote_average"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport useFetch from \"./useFetch\";\nimport classes from \"./GeneralMovies.module.css\";\nimport No_img from \"../../../Assets/NoImg/no-image.png\";\nimport Searchbar from \"../../../components/Searchbar/Searchbar\";\nconst GeneralMovies = (props) => {\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  let inputEnablerMsg = null;\n  let movies = null;\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let myPath = \"\";\n  let data = null;\n  let style = null;\n  let searchBar = null;\n  let myStyle = null;\n  const searchMovie = (event) => {\n    const myInput = event.target.value;\n    setSearchInput(myInput);\n    // if (myInput != \"\")\n    // else {\n    //   console.log(myInput);\n    // setInputEntered(() => false);\n    // }\n  };\n  data = useFetch(props, searchInput);\n  Promise.resolve(data).then((val) => {\n    if (searchInput != \"\") {\n      setInputEntered(true);\n      setStateMovies(val);\n    } else setInputEntered(false);\n    // if (searchInput == \"\") {\n    //   setInputEntered(false);\n    //   setStateMovies([]);\n    // }\n  });\n  if (!props.isSearched) {\n    myStyle = classes.style;\n    stateMovies.splice(0, stateMovies.length - 8);\n  } else\n    searchBar = (\n      <Searchbar style={{ alignContent: \"center\" }} onChange={searchMovie} />\n    );\n\n  if (inputEntered) {\n    movies = (\n      <div\n        // style={{ display: \"flex\", alignContent: \"flex-start\" }}\n        className={myStyle}\n        // className={classes.style}\n      >\n        {stateMovies.map((movie, index) => {\n          if (movie.poster_path) {\n            myPath = movie.poster_path;\n            // console.log(movie);\n          } else if (movie.backdrop_path) myPath = movie.backdrop_path;\n\n          return (\n            <div>\n              <Movie\n                isSearched={props.isSearched}\n                key={movie.id}\n                title={movie.title}\n                image={imgUrl + myPath}\n                description={movie.overview}\n                name={movie.title}\n                rating={movie.vote_average}\n              />\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else inputEnablerMsg = <p>Please! enter a search input above! :)</p>;\n\n  return (\n    <div style={{ alignContent: \"center\" }}>\n      {searchBar}\n      {inputEnablerMsg}\n      {movies}\n    </div>\n  );\n};\n\nexport default GeneralMovies;\n"]},"metadata":{},"sourceType":"module"}