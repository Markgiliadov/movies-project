{"ast":null,"code":"var _jsxFileName = \"/Users/markgiliadov/my-imdb/src/containers/Movies/Movies.js\";\nimport React, { Component } from \"react\";\nimport Movie from \"../../components/Movie/Movie\"; // import Button from \"../../components/Button/Button\";\n\nimport classes from \"./Movies.module.css\";\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\nimport GenericMovies from \"./GenericMovies/GenericMovies\"; // import Rating from \"../../components/Movie/Rating/Rating\";\n\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchingMovies = async ( // urlString,\n    // searchInput,\n    // popCheck\n    searchInput // baseSearchUrl,\n    // baseMovieUrl,\n    // API_KEY_MOVIE,\n    // API_KEY_SEARCH\n    ) => {\n      // await\n      // let movieUrl = \"\";\n      // const API_KEY = \"?api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n      // const languageFilter = \"&language=he-IL\";\n      // let myMovies = null;\n      // let id_info = [];\n      // const baseSearchUrl = \"https://api.themoviedb.org/3/search/movie?query=\";\n      // const baseUrl = \"https://api.themoviedb.org/3/movie/\";\n      // let urlString = baseUrl.concat(\"top_rated\", API_KEY);\n      //  console.log(urlString);\n      // if (searchInput !== \"\" || popCheck) {\n      // if (popCheck)\n      // urlString =\n      //   \"https://api.themoviedb.org/3/movie/now_playing?api_key=d0a9ee76df15c9c8e455000b78e70a56&language=he-IL&page=1\";\n      // else\n      // let urlSearchString =\n      //   \"https://api.themoviedb.org/3/search/movie?query=\" +\n      //   searchInput +\n      //   \"&api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n      // if (searchInput !== \"\") {\n      //   myMovies = (\n      //     // console.log(\n      //   );\n      // );\n      // console.log(myMovies);\n      // await fetch(urlString)\n      //   .then((res) => res.json())\n      //   .then((json) => {\n      //     console.log(json);\n      //     id_info = json.results.map((result) => {\n      //       return result.id; // returning id's of movies\n      //     });\n      //   })\n      //   .catch((error) => console.log(error));\n      // // console.log(id_info);\n      // this.setState({\n      //   movies_ids: id_info, // setting an array of id's\n      // });\n      // this.state.movies_ids.map(async (id, index) => {\n      //   movieUrl = baseUrl + id + API_KEY; // creating a movie from the id given\n      //   myMovies[index] = await fetch(movieUrl)\n      //     .then((res) => res.json())\n      //     .then((json) => {\n      //       // console.log(json);\n      //       return json; // returning movie at an index location\n      //     });\n      //   // .catch((error) => {\n      //   //   console.log(error);\n      //   // })\n      // const API_KEY = \"?api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n      // const languageFilter = \"&language=he-IL\";\n      // const baseSearchUrl = \"https://api.themoviedb.org/3/search/movie?query=\";\n      // const baseUrl = \"https://api.themoviedb.org/3/movie/\";\n      // let urlString = baseUrl.concat(\"top_rated\", API_KEY);\n      let movieUrl = \"\";\n      let myMovies = [];\n      let id_info = [];\n      let finalMovies = [];\n      let urlString = \"\";\n\n      if (searchInput !== \"\") {\n        urlString = this.state.baseSearchUrl.concat(searchInput, this.state.API_KEY_SEARCH); //   else if(){\n        // }\n        // else if(){}\n\n        await fetch(urlString) // need to give urlString\n        .then(res => res.json()).then(json => {\n          console.log(json);\n          id_info = json.results.map(result => {\n            return result.id; // returning id's of movies\n          });\n        }).catch(error => console.log(error)); // console.log(id_info);\n        //   this.setState({\n        //     movies_ids: id_info, // setting an array of id's\n        //   });\n\n        id_info.map(async (id, index) => {\n          movieUrl = this.state.baseMovieUrl + id + this.state.API_KEY_MOVIE; // creating a movie from the id given\n\n          myMovies[index] = await fetch(movieUrl).then(res => res.json()).then(json => {\n            // console.log(json);\n            return json; // returning movie at an index location\n          }); // finalMovies = myMovies;\n\n          console.log(finalMovies); // .catch((error) => {\n          //   console.log(error);\n          // })\n          // this.setState({\n          //   movies: myMovies,\n          // });\n          // console.log(this.state.movies);\n\n          this.setState({\n            movies: myMovies\n          });\n        });\n        console.log(myMovies); // return finalMovies;\n\n        console.log(this.state.movies); // });\n\n        this.setState({\n          inputEntered: true\n        });\n      } else {\n        const inputEnabler = this.state.inputEntered;\n        this.setState({\n          inputEntered: !inputEnabler\n        });\n      } // .catch((error) => {\n      //   console.log(error);\n      // })\n      // console.log(myMovies);\n\n    };\n\n    this.searchContent = event => {\n      let searchInput = event.target.value; // let urlSearchString =\n      //   \"https://api.themoviedb.org/3/search/movie?query=\" +\n      //   searchInput +\n      //   \"&api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n      // const baseMovieUrl = this.state.baseMovieUrl;\n      // const baseSearchUrl = this.state.baseSearchUrl;\n      // const API_KEY_MOVIE = this.state.API_KEY_MOVIE;\n      // const API_KEY_SEARCH = this.state.API_KEY_SEARCH;\n\n      this.setState({\n        searchInput: searchInput\n      }); // baseSearchUrl,\n      // urlSearchString,\n      // baseMovieUrl,\n      // API_KEY_MOVIE,\n      // API_KEY_SEARCH\n      // );\n    };\n\n    this.presentPopularMovies = () => {\n      this.fetchingMovies(\"\", true);\n    };\n\n    this.presentPlayingNow = () => {\n      this.fetchingMovies();\n    };\n\n    this.state = {\n      baseSearchUrl: \"https://api.themoviedb.org/3/search/movie?query=\",\n      baseMovieUrl: \"https://api.themoviedb.org/3/movie/\",\n      API_KEY_MOVIE: \"?api_key=d0a9ee76df15c9c8e455000b78e70a56\",\n      API_KEY_SEARCH: \"&api_key=d0a9ee76df15c9c8e455000b78e70a56\",\n      movies: [],\n      movies_ids: [],\n      showMovies: true,\n      inputEntered: false,\n      searchInput: \"\"\n    };\n  }\n\n  componentDidMount() {// if (this.props.isPopular) this.fetchingMovies();\n    // if(this.props.isPlayingNow)\n    // if(this.props.isUpcoming)\n  }\n\n  // presentMovies = () => {\n  //   const doesShow = this.state.showMovies;\n  //   // this.setState({ showMovies: !doesShow });\n  // };\n  // getImgUrl = (baseUrl, path){\n  //   if(path)\n  // }\n  render() {\n    // let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n    // let movies = null;\n    // let myPath = \"\";\n    // let inputEnablerMsg = null;\n    // let searchBar = null;\n    // // if(this.state.)\n    // if (this.state.inputEntered) {\n    //   movies = (\n    //     <div>\n    //       {this.state.movies.map((movie, index) => {\n    //         if (movie.poster_path) myPath = movie.poster_path;\n    //         else if (movie.backdrop_path) myPath = movie.backdrop_path;\n    //         else return <p key={index}> NO IMAGE! sorry :(</p>;\n    //         return (\n    //           // <div style={{ display: \"flex\" }}>\n    //           <Movie\n    //             key={movie.id}\n    //             title={movie.title}\n    //             image={imgUrl + myPath}\n    //             description={movie.overview}\n    //             name={movie.title}\n    //             rating={movie.vote_average}\n    //           />\n    //           // </div>\n    //         );\n    //       })}\n    //     </div>\n    //   );\n    //   // console.log(movies);\n    // } else {\n    //   inputEnablerMsg = <p>Please! enter a search input above! :)</p>;\n    // }\n    return /*#__PURE__*/React.createElement(GenericMovies, {\n      className: classes.Movies,\n      baseSearchUrl: this.state.baseSearchUrl,\n      baseMovieUrl: this.state.baseMovieUrl,\n      API_KEY_MOVIE: this.state.API_KEY_MOVIE,\n      API_KEY_SEARCH: this.state.API_KEY_SEARCH // onChange={this.searchContent.bind(this)}\n      // searchBar={<Searchbar onChange={this.searchContent.bind(this)} />}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }) // <div className={classes.Movies}>\n    //   {/* <Button name={\"Show Movies\"} myFunction={this.presentMovies} /> */}\n    //   {/* <input type=\"text\" onChange={this.searchContent.bind(this)} /> */}\n    //   {this.props.weirdo}\n    //   {movies}\n    //   {inputEnablerMsg}\n    // </div>\n    ;\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/Movies.js"],"names":["React","Component","Movie","classes","Searchbar","GenericMovies","Movies","constructor","props","fetchingMovies","searchInput","movieUrl","myMovies","id_info","finalMovies","urlString","state","baseSearchUrl","concat","API_KEY_SEARCH","fetch","then","res","json","console","log","results","map","result","id","catch","error","index","baseMovieUrl","API_KEY_MOVIE","setState","movies","inputEntered","inputEnabler","searchContent","event","target","value","presentPopularMovies","presentPlayingNow","movies_ids","showMovies","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Movie from \"../../components/Movie/Movie\";\n// import Button from \"../../components/Button/Button\";\nimport classes from \"./Movies.module.css\";\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\nimport GenericMovies from \"./GenericMovies/GenericMovies\";\n// import Rating from \"../../components/Movie/Rating/Rating\";\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      baseSearchUrl: \"https://api.themoviedb.org/3/search/movie?query=\",\n      baseMovieUrl: \"https://api.themoviedb.org/3/movie/\",\n      API_KEY_MOVIE: \"?api_key=d0a9ee76df15c9c8e455000b78e70a56\",\n      API_KEY_SEARCH: \"&api_key=d0a9ee76df15c9c8e455000b78e70a56\",\n      movies: [],\n      movies_ids: [],\n      showMovies: true,\n      inputEntered: false,\n      searchInput: \"\",\n    };\n  }\n\n  componentDidMount() {\n    // if (this.props.isPopular) this.fetchingMovies();\n    // if(this.props.isPlayingNow)\n    // if(this.props.isUpcoming)\n  }\n\n  fetchingMovies = async (\n    // urlString,\n    // searchInput,\n    // popCheck\n    searchInput\n    // baseSearchUrl,\n    // baseMovieUrl,\n    // API_KEY_MOVIE,\n    // API_KEY_SEARCH\n  ) => {\n    // await\n    // let movieUrl = \"\";\n    // const API_KEY = \"?api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n    // const languageFilter = \"&language=he-IL\";\n    // let myMovies = null;\n    // let id_info = [];\n    // const baseSearchUrl = \"https://api.themoviedb.org/3/search/movie?query=\";\n    // const baseUrl = \"https://api.themoviedb.org/3/movie/\";\n    // let urlString = baseUrl.concat(\"top_rated\", API_KEY);\n\n    //  console.log(urlString);\n    // if (searchInput !== \"\" || popCheck) {\n    // if (popCheck)\n    // urlString =\n    //   \"https://api.themoviedb.org/3/movie/now_playing?api_key=d0a9ee76df15c9c8e455000b78e70a56&language=he-IL&page=1\";\n    // else\n    // let urlSearchString =\n    //   \"https://api.themoviedb.org/3/search/movie?query=\" +\n    //   searchInput +\n    //   \"&api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n    // if (searchInput !== \"\") {\n    //   myMovies = (\n    //     // console.log(\n\n    //   );\n    // );\n    // console.log(myMovies);\n\n    // await fetch(urlString)\n    //   .then((res) => res.json())\n    //   .then((json) => {\n    //     console.log(json);\n    //     id_info = json.results.map((result) => {\n    //       return result.id; // returning id's of movies\n    //     });\n    //   })\n    //   .catch((error) => console.log(error));\n    // // console.log(id_info);\n    // this.setState({\n    //   movies_ids: id_info, // setting an array of id's\n    // });\n    // this.state.movies_ids.map(async (id, index) => {\n    //   movieUrl = baseUrl + id + API_KEY; // creating a movie from the id given\n    //   myMovies[index] = await fetch(movieUrl)\n    //     .then((res) => res.json())\n    //     .then((json) => {\n    //       // console.log(json);\n\n    //       return json; // returning movie at an index location\n    //     });\n    //   // .catch((error) => {\n    //   //   console.log(error);\n    //   // })\n\n    // const API_KEY = \"?api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n    // const languageFilter = \"&language=he-IL\";\n    // const baseSearchUrl = \"https://api.themoviedb.org/3/search/movie?query=\";\n    // const baseUrl = \"https://api.themoviedb.org/3/movie/\";\n    // let urlString = baseUrl.concat(\"top_rated\", API_KEY);\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = [];\n    let finalMovies = [];\n    let urlString = \"\";\n\n    if (searchInput !== \"\") {\n      urlString = this.state.baseSearchUrl.concat(\n        searchInput,\n        this.state.API_KEY_SEARCH\n      );\n\n      //   else if(){\n      // }\n      // else if(){}\n\n      await fetch(urlString) // need to give urlString\n        .then((res) => res.json())\n        .then((json) => {\n          console.log(json);\n          id_info = json.results.map((result) => {\n            return result.id; // returning id's of movies\n          });\n        })\n        .catch((error) => console.log(error));\n      // console.log(id_info);\n      //   this.setState({\n      //     movies_ids: id_info, // setting an array of id's\n      //   });\n      id_info.map(async (id, index) => {\n        movieUrl = this.state.baseMovieUrl + id + this.state.API_KEY_MOVIE; // creating a movie from the id given\n        myMovies[index] = await fetch(movieUrl)\n          .then((res) => res.json())\n          .then((json) => {\n            // console.log(json);\n            return json; // returning movie at an index location\n          });\n        // finalMovies = myMovies;\n        console.log(finalMovies);\n        // .catch((error) => {\n        //   console.log(error);\n        // })\n        // this.setState({\n        //   movies: myMovies,\n        // });\n        // console.log(this.state.movies);\n        this.setState({\n          movies: myMovies,\n        });\n      });\n      console.log(myMovies);\n      // return finalMovies;\n\n      console.log(this.state.movies);\n      // });\n      this.setState({ inputEntered: true });\n    } else {\n      const inputEnabler = this.state.inputEntered;\n      this.setState({ inputEntered: !inputEnabler });\n    }\n\n    // .catch((error) => {\n    //   console.log(error);\n    // })\n\n    // console.log(myMovies);\n  };\n\n  // fetchingPopularMovies = async () => {\n  //   let popUrl =\n  //     \"https://api.themoviedb.org/3/movie/popular?api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n  //   fetch(popUrl)\n  //   .then(res => console.);\n  // };\n  searchContent = (event) => {\n    let searchInput = event.target.value;\n    // let urlSearchString =\n    //   \"https://api.themoviedb.org/3/search/movie?query=\" +\n    //   searchInput +\n    //   \"&api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n    // const baseMovieUrl = this.state.baseMovieUrl;\n    // const baseSearchUrl = this.state.baseSearchUrl;\n    // const API_KEY_MOVIE = this.state.API_KEY_MOVIE;\n    // const API_KEY_SEARCH = this.state.API_KEY_SEARCH;\n\n    this.setState({ searchInput: searchInput });\n    // baseSearchUrl,\n    // urlSearchString,\n    // baseMovieUrl,\n    // API_KEY_MOVIE,\n    // API_KEY_SEARCH\n    // );\n  };\n  presentPopularMovies = () => {\n    this.fetchingMovies(\"\", true);\n  };\n  presentPlayingNow = () => {\n    this.fetchingMovies();\n  };\n  // presentMovies = () => {\n  //   const doesShow = this.state.showMovies;\n  //   // this.setState({ showMovies: !doesShow });\n  // };\n\n  // getImgUrl = (baseUrl, path){\n\n  //   if(path)\n  // }\n  render() {\n    // let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n\n    // let movies = null;\n    // let myPath = \"\";\n    // let inputEnablerMsg = null;\n    // let searchBar = null;\n    // // if(this.state.)\n    // if (this.state.inputEntered) {\n    //   movies = (\n    //     <div>\n    //       {this.state.movies.map((movie, index) => {\n    //         if (movie.poster_path) myPath = movie.poster_path;\n    //         else if (movie.backdrop_path) myPath = movie.backdrop_path;\n    //         else return <p key={index}> NO IMAGE! sorry :(</p>;\n    //         return (\n    //           // <div style={{ display: \"flex\" }}>\n    //           <Movie\n    //             key={movie.id}\n    //             title={movie.title}\n    //             image={imgUrl + myPath}\n    //             description={movie.overview}\n    //             name={movie.title}\n    //             rating={movie.vote_average}\n    //           />\n    //           // </div>\n    //         );\n    //       })}\n    //     </div>\n    //   );\n    //   // console.log(movies);\n    // } else {\n    //   inputEnablerMsg = <p>Please! enter a search input above! :)</p>;\n    // }\n\n    return (\n      <GenericMovies\n        className={classes.Movies}\n        baseSearchUrl={this.state.baseSearchUrl}\n        baseMovieUrl={this.state.baseMovieUrl}\n        API_KEY_MOVIE={this.state.API_KEY_MOVIE}\n        API_KEY_SEARCH={this.state.API_KEY_SEARCH}\n        // onChange={this.searchContent.bind(this)}\n        // searchBar={<Searchbar onChange={this.searchContent.bind(this)} />}\n      />\n      // <div className={classes.Movies}>\n      //   {/* <Button name={\"Show Movies\"} myFunction={this.presentMovies} /> */}\n      //   {/* <input type=\"text\" onChange={this.searchContent.bind(this)} /> */}\n\n      //   {this.props.weirdo}\n\n      //   {movies}\n      //   {inputEnablerMsg}\n      // </div>\n    );\n  }\n}\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}