{"ast":null,"code":"var _jsxFileName = \"/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GenericMovies.js\";\nimport React from \"react\";\nimport Auxil from \"../../../hoc/Auxil/Auxil\";\n\nconst genericMovies = props => {\n  const fetchedMovies = async props => {\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = [];\n    let finalMovies = []; // const API_KEY = \"?api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n    // const languageFilter = \"&language=he-IL\";\n    // const baseSearchUrl = \"https://api.themoviedb.org/3/search/movie?query=\";\n    // const baseUrl = \"https://api.themoviedb.org/3/movie/\";\n    // let urlString = baseUrl.concat(\"top_rated\", API_KEY);\n\n    await fetch(props.urlString) // need to give urlString\n    .then(res => res.json()).then(json => {\n      console.log(json);\n      id_info = json.results.map(result => {\n        return result.id; // returning id's of movies\n      });\n    }).catch(error => console.log(error)); // console.log(id_info);\n    //   this.setState({\n    //     movies_ids: id_info, // setting an array of id's\n    //   });\n\n    id_info.map(async (id, index) => {\n      movieUrl = props.baseUrl + id + props.API_KEY; // creating a movie from the id given\n\n      myMovies[index] = await fetch(movieUrl).then(res => res.json()).then(json => {\n        // console.log(json);\n        return json; // returning movie at an index location\n      });\n      finalMovies = myMovies;\n      console.log(finalMovies); // .catch((error) => {\n      //   console.log(error);\n      // })\n      // this.setState({\n      //   movies: myMovies,\n      // });\n      // console.log(this.state.movies);\n    });\n    console.log(myMovies);\n    return finalMovies;\n  };\n\n  return /*#__PURE__*/React.createElement(Auxil, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }, fetchedMovies(props));\n};\n\nexport default genericMovies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GenericMovies.js"],"names":["React","Auxil","genericMovies","props","fetchedMovies","movieUrl","myMovies","id_info","finalMovies","fetch","urlString","then","res","json","console","log","results","map","result","id","catch","error","index","baseUrl","API_KEY"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAMC,aAAa,GAAG,MAAOD,KAAP,IAAiB;AACrC,QAAIE,QAAQ,GAAG,EAAf;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,WAAW,GAAG,EAAlB,CAJqC,CAKrC;AACA;AACA;AACA;AACA;;AAEA,UAAMC,KAAK,CAACN,KAAK,CAACO,SAAP,CAAL,CAAuB;AAAvB,KACHC,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGE,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,MAAAA,OAAO,GAAGM,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,MAAD,IAAY;AACrC,eAAOA,MAAM,CAACC,EAAd,CADqC,CACnB;AACnB,OAFS,CAAV;AAGD,KAPG,EAQHC,KARG,CAQIC,KAAD,IAAWP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CARd,CAAN,CAXqC,CAoBrC;AACA;AACA;AACA;;AACAd,IAAAA,OAAO,CAACU,GAAR,CAAY,OAAOE,EAAP,EAAWG,KAAX,KAAqB;AAC/BjB,MAAAA,QAAQ,GAAGF,KAAK,CAACoB,OAAN,GAAgBJ,EAAhB,GAAqBhB,KAAK,CAACqB,OAAtC,CAD+B,CACgB;;AAC/ClB,MAAAA,QAAQ,CAACgB,KAAD,CAAR,GAAkB,MAAMb,KAAK,CAACJ,QAAD,CAAL,CACrBM,IADqB,CACfC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADO,EAErBF,IAFqB,CAEfE,IAAD,IAAU;AACd;AACA,eAAOA,IAAP,CAFc,CAED;AACd,OALqB,CAAxB;AAMAL,MAAAA,WAAW,GAAGF,QAAd;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ,EAT+B,CAU/B;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAjBD;AAkBAM,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACA,WAAOE,WAAP;AACD,GA5CD;;AA6CA,sBAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQJ,aAAa,CAACD,KAAD,CAArB,CAAP;AACD,CA/CD;;AAgDA,eAAeD,aAAf","sourcesContent":["import React from \"react\";\nimport Auxil from \"../../../hoc/Auxil/Auxil\";\nconst genericMovies = (props) => {\n  const fetchedMovies = async (props) => {\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = [];\n    let finalMovies = [];\n    // const API_KEY = \"?api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n    // const languageFilter = \"&language=he-IL\";\n    // const baseSearchUrl = \"https://api.themoviedb.org/3/search/movie?query=\";\n    // const baseUrl = \"https://api.themoviedb.org/3/movie/\";\n    // let urlString = baseUrl.concat(\"top_rated\", API_KEY);\n\n    await fetch(props.urlString) // need to give urlString\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n        id_info = json.results.map((result) => {\n          return result.id; // returning id's of movies\n        });\n      })\n      .catch((error) => console.log(error));\n    // console.log(id_info);\n    //   this.setState({\n    //     movies_ids: id_info, // setting an array of id's\n    //   });\n    id_info.map(async (id, index) => {\n      movieUrl = props.baseUrl + id + props.API_KEY; // creating a movie from the id given\n      myMovies[index] = await fetch(movieUrl)\n        .then((res) => res.json())\n        .then((json) => {\n          // console.log(json);\n          return json; // returning movie at an index location\n        });\n      finalMovies = myMovies;\n      console.log(finalMovies);\n      // .catch((error) => {\n      //   console.log(error);\n      // })\n      // this.setState({\n      //   movies: myMovies,\n      // });\n      // console.log(this.state.movies);\n    });\n    console.log(myMovies);\n    return finalMovies;\n  };\n  return <Auxil>{fetchedMovies(props)}</Auxil>;\n};\nexport default genericMovies;\n"]},"metadata":{},"sourceType":"module"}