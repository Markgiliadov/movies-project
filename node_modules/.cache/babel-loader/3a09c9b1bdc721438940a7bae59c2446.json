{"ast":null,"code":"var _jsxFileName = \"/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GenericMovies.js\";\nimport React, { useEffect, useState, Component } from \"react\"; // import Auxil from \"../../../hoc/Auxil/Auxil\";\n\nimport Movie from \"../../../components/Movie/Movie\";\nimport SearchBar from \"../../../components/Searchbar/Searchbar\";\n\nclass GenericMovies extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.searchContent = event => {\n      let searchInput = event.target.value;\n      this.fetchedMovies(\"captain\");\n    };\n\n    this.fetchedMovies = async searchInput => {\n      console.log(searchInput);\n      let movieUrl = \"\";\n      let myMovies = [];\n      let id_info = []; // let finalMovies = [];\n\n      let urlString = \"\"; // let searchInput = props.searchBar.props.onChange();\n\n      if (searchInput !== \"\") urlString = this.props.baseSearchUrl.concat(searchInput, this.props.API_KEY_SEARCH); //   else if(){\n      // }\n      // else if(){}\n\n      await fetch(urlString) // need to give urlString\n      .then(res => res.json()).then(json => {\n        console.log(json);\n        id_info = json.results.map(result => {\n          return result.id; // returning id's of movies\n        });\n      }).catch(error => console.log(error));\n      this.setState({\n        setStateIds: id_info\n      }); // console.log(id_info);\n      //   this.setState({\n      //     movies_ids: id_info, // setting an array of id's\n      //   });\n\n      stateIds.map(async (id, index) => {\n        movieUrl = props.baseMovieUrl + id + props.API_KEY_MOVIE; // creating a movie from the id given\n        // console.log(movieUrl);\n\n        myMovies[index] = await fetch(movieUrl).then(res => res.json()).then(json => {\n          // console.log(json);\n          return json; // returning movie at an index location\n        }); // setStateMovies((stateMovies) => [...stateMovies, ...myMovies]);\n        // setStateMovies((myMovies) => {\n        //   return { myMovies };\n        // });\n\n        setStateMovies(myMovies); // setStateMovies((prevStateMovies) => {\n        //   return { ...prevStateMovies, ...myMovies };\n        // });\n        // console.log(stateMovies);\n        // setState((prevState) => {\n        //   // Object.assign would also work\n        //   return { ...prevState, ...updatedValues };\n        // });\n        // console.log(myMovies[index]);\n        // finalMovies = myMovies;\n        // console.log(finalMovies);\n        // .catch((error) => {\n        //   console.log(error);\n        // })\n        // this.setState({\n        //   movies: myMovies,\n        // });\n        // console.log(this.state.movies);\n      }); // return finalMovies;\n      // console.log(stmovies);\n      // });\n\n      setInputEntered(true); // this.setState({ inputEntered: true });\n    };\n  }\n\n  render() {\n    let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n    let movies = null;\n    let myPath = \"\";\n    let inputEnablerMsg = null;\n    let searchBar = null; // if(this.state.)\n\n    if (props.baseSearchUrl) searchBar = /*#__PURE__*/React.createElement(SearchBar, {\n      onChange: searchContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 42\n      }\n    });\n\n    if (inputEntered) {\n      console.log(stateMovies);\n      const presentMovies = stateMovies;\n      movies = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, stateMovies.map((movie, index) => {\n        if (movie.poster_path) myPath = movie.poster_path;else if (movie.backdrop_path) myPath = movie.backdrop_path;else return /*#__PURE__*/React.createElement(\"p\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }\n        }, \" NO IMAGE! sorry :(\");\n        return (\n          /*#__PURE__*/\n          // <div style={{ display: \"flex\" }}>\n          React.createElement(Movie // key={movie.id}\n          , {\n            title: movie.title,\n            image: imgUrl + myPath,\n            description: movie.overview,\n            name: movie.title,\n            rating: movie.vote_average,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }\n          }) // {console.log(movie.title)}\n          // </div>\n\n        );\n      }));\n      console.log(movies);\n    } else {\n      inputEnablerMsg = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, \"Please! enter a search input above! :)\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, props.children, searchBar, movies, inputEnablerMsg);\n  }\n\n}\n\nexport default GenericMovies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GenericMovies.js"],"names":["React","useEffect","useState","Component","Movie","SearchBar","GenericMovies","searchContent","event","searchInput","target","value","fetchedMovies","console","log","movieUrl","myMovies","id_info","urlString","props","baseSearchUrl","concat","API_KEY_SEARCH","fetch","then","res","json","results","map","result","id","catch","error","setState","setStateIds","stateIds","index","baseMovieUrl","API_KEY_MOVIE","setStateMovies","setInputEntered","render","imgUrl","movies","myPath","inputEnablerMsg","searchBar","inputEntered","stateMovies","presentMovies","movie","poster_path","backdrop_path","title","overview","vote_average","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from \"react\";\n// import Auxil from \"../../../hoc/Auxil/Auxil\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport SearchBar from \"../../../components/Searchbar/Searchbar\";\nclass GenericMovies extends Component {\n  // let [stateMovies, setStateMovies] = useState([]);\n  // const [stateIds, setStateIds] = useState([]);\n  // const [inputEntered, setInputEntered] = useState(false);\n  // useEffect(() => {}, [stateMovies]);\n  searchContent = (event) => {\n    let searchInput = event.target.value;\n    this.fetchedMovies(\"captain\");\n  };\n  fetchedMovies = async (searchInput) => {\n    console.log(searchInput);\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = [];\n    // let finalMovies = [];\n    let urlString = \"\";\n    // let searchInput = props.searchBar.props.onChange();\n    if (searchInput !== \"\")\n      urlString = this.props.baseSearchUrl.concat(\n        searchInput,\n        this.props.API_KEY_SEARCH\n      );\n\n    //   else if(){\n    // }\n    // else if(){}\n\n    await fetch(urlString) // need to give urlString\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n        id_info = json.results.map((result) => {\n          return result.id; // returning id's of movies\n        });\n      })\n      .catch((error) => console.log(error));\n    this.setState({ setStateIds: id_info });\n    // console.log(id_info);\n    //   this.setState({\n    //     movies_ids: id_info, // setting an array of id's\n    //   });\n    stateIds.map(async (id, index) => {\n      movieUrl = props.baseMovieUrl + id + props.API_KEY_MOVIE; // creating a movie from the id given\n      // console.log(movieUrl);\n      myMovies[index] = await fetch(movieUrl)\n        .then((res) => res.json())\n        .then((json) => {\n          // console.log(json);\n\n          return json; // returning movie at an index location\n        });\n      // setStateMovies((stateMovies) => [...stateMovies, ...myMovies]);\n      // setStateMovies((myMovies) => {\n      //   return { myMovies };\n      // });\n      setStateMovies(myMovies);\n      // setStateMovies((prevStateMovies) => {\n      //   return { ...prevStateMovies, ...myMovies };\n      // });\n      // console.log(stateMovies);\n\n      // setState((prevState) => {\n      //   // Object.assign would also work\n      //   return { ...prevState, ...updatedValues };\n      // });\n      // console.log(myMovies[index]);\n      // finalMovies = myMovies;\n      // console.log(finalMovies);\n      // .catch((error) => {\n      //   console.log(error);\n      // })\n      // this.setState({\n      //   movies: myMovies,\n      // });\n      // console.log(this.state.movies);\n    });\n\n    // return finalMovies;\n\n    // console.log(stmovies);\n    // });\n    setInputEntered(true);\n    // this.setState({ inputEntered: true });\n  };\n  render() {\n    let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n    let movies = null;\n    let myPath = \"\";\n    let inputEnablerMsg = null;\n    let searchBar = null;\n    // if(this.state.)\n    if (props.baseSearchUrl) searchBar = <SearchBar onChange={searchContent} />;\n\n    if (inputEntered) {\n      console.log(stateMovies);\n      const presentMovies = stateMovies;\n\n      movies = (\n        <div>\n          {stateMovies.map((movie, index) => {\n            if (movie.poster_path) myPath = movie.poster_path;\n            else if (movie.backdrop_path) myPath = movie.backdrop_path;\n            else return <p key={index}> NO IMAGE! sorry :(</p>;\n            return (\n              // <div style={{ display: \"flex\" }}>\n              <Movie\n                // key={movie.id}\n                title={movie.title}\n                image={imgUrl + myPath}\n                description={movie.overview}\n                name={movie.title}\n                rating={movie.vote_average}\n              />\n              // {console.log(movie.title)}\n              // </div>\n            );\n          })}\n        </div>\n      );\n      console.log(movies);\n    } else {\n      inputEnablerMsg = <p>Please! enter a search input above! :)</p>;\n    }\n\n    return (\n      <div>\n        {/* {props.searchBar} */}\n        {props.children}\n        {/* <SearchBar onChange={searchContent} /> */}\n        {searchBar}\n        {movies}\n\n        {inputEnablerMsg}\n      </div>\n    );\n  }\n}\nexport default GenericMovies;\n"]},"metadata":{},"sourceType":"module"}