{"ast":null,"code":"var _jsxFileName = \"/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport SearchBar from \"../../../components/Searchbar/Searchbar\";\nimport useFetch from \"./useFetch\";\n\nconst GeneralMovies = props => {\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(false);\n  let searchInput = \"jesus\";\n  let inputEnablerMsg = null;\n  let searchBar = null;\n  let movies = null;\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let myPath = \"\";\n  const data = useFetch(props, searchInput);\n  let genMovies = [];\n  Promise.resolve(data).then(val => {\n    if (val.length) {\n      //   setInputEntered(true);\n      //   setStateMovies(val);\n      console.log(val);\n    }\n  });\n\n  if (inputEntered) {\n    movies = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, stateMovies.map((movie, index) => {\n      if (movie.poster_path) {\n        myPath = movie.poster_path;\n        console.log(movie);\n      } else if (movie.backdrop_path) myPath = movie.backdrop_path;else return /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 23\n        }\n      }, \" NO IMAGE! sorry :(\");\n\n      return (\n        /*#__PURE__*/\n        // <div style={{ display: \"flex\" }}>\n        React.createElement(Movie, {\n          key: movie.id,\n          title: movie.title,\n          image: imgUrl + myPath,\n          description: movie.overview,\n          name: movie.title,\n          rating: movie.vote_average,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }\n        }) // </div>\n\n      );\n    }));\n  } else inputEnablerMsg = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }\n  }, \"Please! enter a search input above! :)\");\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, searchBar, inputEnablerMsg, movies);\n};\n\nexport default GeneralMovies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js"],"names":["React","useEffect","useState","Movie","SearchBar","useFetch","GeneralMovies","props","stateMovies","setStateMovies","inputEntered","setInputEntered","searchInput","inputEnablerMsg","searchBar","movies","imgUrl","myPath","data","genMovies","Promise","resolve","then","val","length","console","log","map","movie","index","poster_path","backdrop_path","id","title","overview","vote_average"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;AACA,MAAIU,WAAW,GAAG,OAAlB;AACA,MAAIC,eAAe,GAAG,IAAtB;AACA,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,MAAM,GAAG,kCAAb;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,IAAI,GAAGb,QAAQ,CAACE,KAAD,EAAQK,WAAR,CAArB;AACA,MAAIO,SAAS,GAAG,EAAhB;AAEAC,EAAAA,OAAO,CAACC,OAAR,CAAgBH,IAAhB,EAAsBI,IAAtB,CAA4BC,GAAD,IAAS;AAClC,QAAIA,GAAG,CAACC,MAAR,EAAgB;AACd;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD;AACF,GAND;;AAOA,MAAIb,YAAJ,EAAkB;AAChBK,IAAAA,MAAM,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,WAAW,CAACmB,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACjC,UAAID,KAAK,CAACE,WAAV,EAAuB;AACrBb,QAAAA,MAAM,GAAGW,KAAK,CAACE,WAAf;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OAHD,MAGO,IAAIA,KAAK,CAACG,aAAV,EAAyBd,MAAM,GAAGW,KAAK,CAACG,aAAf,CAAzB,KACF,oBAAO;AAAG,QAAA,GAAG,EAAEF,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;;AACL;AAAA;AACE;AACA,4BAAC,KAAD;AACE,UAAA,GAAG,EAAED,KAAK,CAACI,EADb;AAEE,UAAA,KAAK,EAAEJ,KAAK,CAACK,KAFf;AAGE,UAAA,KAAK,EAAEjB,MAAM,GAAGC,MAHlB;AAIE,UAAA,WAAW,EAAEW,KAAK,CAACM,QAJrB;AAKE,UAAA,IAAI,EAAEN,KAAK,CAACK,KALd;AAME,UAAA,MAAM,EAAEL,KAAK,CAACO,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CAUE;;AAVF;AAYD,KAlBA,CADH,CADF;AAuBD,GAxBD,MAwBOtB,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAlB;;AAEP,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,SADH,EAEGD,eAFH,EAGGE,MAHH,CADF;AAOD,CApDD;;AAsDA,eAAeT,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport SearchBar from \"../../../components/Searchbar/Searchbar\";\nimport useFetch from \"./useFetch\";\nconst GeneralMovies = (props) => {\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(false);\n  let searchInput = \"jesus\";\n  let inputEnablerMsg = null;\n  let searchBar = null;\n  let movies = null;\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let myPath = \"\";\n  const data = useFetch(props, searchInput);\n  let genMovies = [];\n\n  Promise.resolve(data).then((val) => {\n    if (val.length) {\n      //   setInputEntered(true);\n      //   setStateMovies(val);\n      console.log(val);\n    }\n  });\n  if (inputEntered) {\n    movies = (\n      <div>\n        {stateMovies.map((movie, index) => {\n          if (movie.poster_path) {\n            myPath = movie.poster_path;\n            console.log(movie);\n          } else if (movie.backdrop_path) myPath = movie.backdrop_path;\n          else return <p key={index}> NO IMAGE! sorry :(</p>;\n          return (\n            // <div style={{ display: \"flex\" }}>\n            <Movie\n              key={movie.id}\n              title={movie.title}\n              image={imgUrl + myPath}\n              description={movie.overview}\n              name={movie.title}\n              rating={movie.vote_average}\n            />\n            // </div>\n          );\n        })}\n      </div>\n    );\n  } else inputEnablerMsg = <p>Please! enter a search input above! :)</p>;\n\n  return (\n    <div>\n      {searchBar}\n      {inputEnablerMsg}\n      {movies}\n    </div>\n  );\n};\n\nexport default GeneralMovies;\n"]},"metadata":{},"sourceType":"module"}