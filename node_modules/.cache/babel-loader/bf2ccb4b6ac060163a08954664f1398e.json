{"ast":null,"code":"var _jsxFileName = \"/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GenericMovies.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Auxil from \"../../../hoc/Auxil/Auxil\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport SearchBar from \"../../../components/Searchbar/Searchbar\";\n\nconst GenericMovies = props => {\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(false); // useEffect(console.log(fetchedMovies));\n\n  const searchContent = event => {\n    let searchInput = event.target.value;\n    fetchedMovies(searchInput);\n  };\n\n  const fetchedMovies = async searchInput => {\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = [];\n    let finalMovies = [];\n    let urlString = \"\"; // let searchInput = props.searchBar.props.onChange();\n\n    if (searchInput !== \"\") urlString = props.baseSearchUrl.concat(searchInput, props.API_KEY_SEARCH); //   else if(){\n    // }\n    // else if(){}\n\n    await fetch(urlString) // need to give urlString\n    .then(res => res.json()).then(json => {\n      console.log(json);\n      id_info = json.results.map(result => {\n        return result.id; // returning id's of movies\n      });\n    }).catch(error => console.log(error)); // console.log(id_info);\n    //   this.setState({\n    //     movies_ids: id_info, // setting an array of id's\n    //   });\n\n    id_info.map(async (id, index) => {\n      movieUrl = props.baseMovieUrl + id + props.API_KEY_MOVIE; // creating a movie from the id given\n\n      myMovies[index] = await fetch(movieUrl).then(res => res.json()).then(json => {\n        // console.log(json);\n        return json; // returning movie at an index location\n      }); // finalMovies = myMovies;\n\n      console.log(finalMovies); // .catch((error) => {\n      //   console.log(error);\n      // })\n      // this.setState({\n      //   movies: myMovies,\n      // });\n      // console.log(this.state.movies);\n\n      setStateMovies(myMovies);\n    });\n    console.log(stateMovies); // return finalMovies;\n    // console.log(stmovies);\n    // });\n\n    setInputEntered(true); // this.setState({ inputEntered: true });\n  };\n\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let movies = null;\n  let myPath = \"\";\n  let inputEnablerMsg = null;\n  let searchBar = null; // if(this.state.)\n\n  if (props.baseSearchUrl) searchBar = /*#__PURE__*/React.createElement(SearchBar, {\n    onChange: searchContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 40\n    }\n  });\n\n  if (inputEntered) {\n    movies = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, stateMovies.map((movie, index) => {\n      if (movie.poster_path) myPath = movie.poster_path;else if (movie.backdrop_path) myPath = movie.backdrop_path;else return /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }\n      }, \" NO IMAGE! sorry :(\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Movie, {\n        key: movie.id,\n        title: movie.title,\n        image: imgUrl + myPath,\n        description: movie.overview,\n        name: movie.title,\n        rating: movie.vote_average,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }));\n    })); // console.log(movies);\n  } else {\n    inputEnablerMsg = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }\n    }, \"Please! enter a search input above! :)\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, searchBar, movies, inputEnablerMsg);\n};\n\nexport default GenericMovies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GenericMovies.js"],"names":["React","useEffect","useState","Auxil","Movie","SearchBar","GenericMovies","props","stateMovies","setStateMovies","inputEntered","setInputEntered","searchContent","event","searchInput","target","value","fetchedMovies","movieUrl","myMovies","id_info","finalMovies","urlString","baseSearchUrl","concat","API_KEY_SEARCH","fetch","then","res","json","console","log","results","map","result","id","catch","error","index","baseMovieUrl","API_KEY_MOVIE","imgUrl","movies","myPath","inputEnablerMsg","searchBar","movie","poster_path","backdrop_path","title","overview","vote_average","className"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Auxil from \"../../../hoc/Auxil/Auxil\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport SearchBar from \"../../../components/Searchbar/Searchbar\";\nconst GenericMovies = (props) => {\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(false);\n  // useEffect(console.log(fetchedMovies));\n  const searchContent = (event) => {\n    let searchInput = event.target.value;\n    fetchedMovies(searchInput);\n  };\n  const fetchedMovies = async (searchInput) => {\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = [];\n    let finalMovies = [];\n    let urlString = \"\";\n    // let searchInput = props.searchBar.props.onChange();\n    if (searchInput !== \"\")\n      urlString = props.baseSearchUrl.concat(searchInput, props.API_KEY_SEARCH);\n\n    //   else if(){\n    // }\n    // else if(){}\n\n    await fetch(urlString) // need to give urlString\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n        id_info = json.results.map((result) => {\n          return result.id; // returning id's of movies\n        });\n      })\n      .catch((error) => console.log(error));\n    // console.log(id_info);\n    //   this.setState({\n    //     movies_ids: id_info, // setting an array of id's\n    //   });\n    id_info.map(async (id, index) => {\n      movieUrl = props.baseMovieUrl + id + props.API_KEY_MOVIE; // creating a movie from the id given\n      myMovies[index] = await fetch(movieUrl)\n        .then((res) => res.json())\n        .then((json) => {\n          // console.log(json);\n          return json; // returning movie at an index location\n        });\n      // finalMovies = myMovies;\n      console.log(finalMovies);\n      // .catch((error) => {\n      //   console.log(error);\n      // })\n      // this.setState({\n      //   movies: myMovies,\n      // });\n      // console.log(this.state.movies);\n      setStateMovies(myMovies);\n    });\n    console.log(stateMovies);\n    // return finalMovies;\n\n    // console.log(stmovies);\n    // });\n    setInputEntered(true);\n    // this.setState({ inputEntered: true });\n  };\n\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let movies = null;\n  let myPath = \"\";\n  let inputEnablerMsg = null;\n  let searchBar = null;\n  // if(this.state.)\n  if (props.baseSearchUrl) searchBar = <SearchBar onChange={searchContent} />;\n\n  if (inputEntered) {\n    movies = (\n      <div>\n        {stateMovies.map((movie, index) => {\n          if (movie.poster_path) myPath = movie.poster_path;\n          else if (movie.backdrop_path) myPath = movie.backdrop_path;\n          else return <p key={index}> NO IMAGE! sorry :(</p>;\n          return (\n            <div>\n              <Movie\n                key={movie.id}\n                title={movie.title}\n                image={imgUrl + myPath}\n                description={movie.overview}\n                name={movie.title}\n                rating={movie.vote_average}\n              />\n            </div>\n          );\n        })}\n      </div>\n    );\n    // console.log(movies);\n  } else {\n    inputEnablerMsg = <p>Please! enter a search input above! :)</p>;\n  }\n\n  return (\n    <div className={props.className}>\n      {/* {props.searchBar} */}\n      {searchBar}\n      {movies}\n      {inputEnablerMsg}\n    </div>\n  );\n};\nexport default GenericMovies;\n"]},"metadata":{},"sourceType":"module"}