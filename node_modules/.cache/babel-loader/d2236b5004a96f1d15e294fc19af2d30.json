{"ast":null,"code":"var _jsxFileName = \"/Users/markgiliadov/my-imdb/src/containers/Movies/Movies.js\";\nimport React, { Component } from \"react\";\nimport Movie from \"../../components/Movie/Movie\"; // import Button from \"../../components/Button/Button\";\n\nimport classes from \"./Movies.module.css\";\nimport Searchbar from \"../../components/Searchbar/Searchbar\"; // import Rating from \"../../components/Movie/Rating/Rating\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      movies_ids: [],\n      showMovies: true,\n      inputEntered: true\n    };\n\n    this.fetchingMovies = async ( // urlString,\n    searchInput, popCheck) => {\n      let movieUrl = \"\";\n      let myMovies = [];\n      let id_info = [];\n      let urlString = \"\"; //  console.log(urlString);\n      // if (searchInput !== \"\" || popCheck) {\n      // if (popCheck)\n      // urlString =\n      //   \"https://api.themoviedb.org/3/movie/now_playing?api_key=d0a9ee76df15c9c8e455000b78e70a56&language=he-IL&page=1\";\n      // else\n\n      urlString = \"https://api.themoviedb.org/3/search/movie?query=\" + searchInput + \"&api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n\n      if (searchInput !== \"\") {\n        await fetch(urlString).then(res => res.json()).then(json => {\n          console.log(json);\n          id_info = json.results.map(result => {\n            return result.id; // returning id's of movies\n          });\n        }).catch(error => console.log(error)); // console.log(id_info);\n\n        this.setState({\n          movies_ids: id_info // setting an array of id's\n\n        });\n        this.state.movies_ids.map(async (id, index) => {\n          movieUrl = \"https://api.themoviedb.org/3/movie/\" + id + \"?api_key=d0a9ee76df15c9c8e455000b78e70a56&language=he-IL\"; // creating a movie from the id given\n\n          myMovies[index] = await fetch(movieUrl).then(res => res.json()).then(json => {\n            // console.log(json);\n            return json; // returning movie at an index location\n          }); // .catch((error) => {\n          //   console.log(error);\n          // })\n        });\n        this.setState({\n          movies: myMovies,\n          inputEntered: true\n        });\n        console.log(this.state.movies); // this.setState({  });\n      } else {\n        const inputEnabler = this.state.inputEntered;\n        this.setState({\n          inputEntered: !inputEnabler\n        });\n      } // .catch((error) => {\n      //   console.log(error);\n      // })\n      // console.log(myMovies);\n\n    };\n\n    this.searchContent = event => {\n      this.fetchingMovies(event.target.value, false);\n    };\n\n    this.presentPopularMovies = () => {\n      this.fetchingMovies(\"\", true);\n    };\n  }\n\n  componentDidUpdate() {\n    this.fetchingMovies(\"s\", false);\n  }\n\n  componentDidMount() {\n    // this.fetchingMovies(\"\", true);\n    this.fetchingMovies(\"s\", false);\n  }\n\n  // presentMovies = () => {\n  //   const doesShow = this.state.showMovies;\n  //   // this.setState({ showMovies: !doesShow });\n  // };\n  // getImgUrl = (baseUrl, path){\n  //   if(path)\n  // }\n  render() {\n    let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n    let movies = null;\n    let myPath = \"\";\n    let inputEnablerMsg = null;\n    let searchBar = null; // if(this.state.)\n\n    if (this.state.inputEntered) {\n      movies = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, this.state.movies.map((movie, index) => {\n        if (movie.poster_path) myPath = movie.poster_path;else if (movie.backdrop_path) myPath = movie.backdrop_path;else return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }\n        }, \" NO IMAGE! sorry :(\");\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: movie.id,\n          style: {\n            display: \"flex\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Movie, {\n          title: movie.title,\n          image: imgUrl + myPath,\n          description: movie.overview,\n          name: movie.title,\n          rating: movie.vote_average,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }\n        }));\n      }));\n      console.log(movies);\n    } else {\n      inputEnablerMsg = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, \"Please! enter a search input above! :)\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Searchbar, {\n      onChange: this.searchContent.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }), movies, inputEnablerMsg);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/Movies.js"],"names":["React","Component","Movie","classes","Searchbar","Movies","state","movies","movies_ids","showMovies","inputEntered","fetchingMovies","searchInput","popCheck","movieUrl","myMovies","id_info","urlString","fetch","then","res","json","console","log","results","map","result","id","catch","error","setState","index","inputEnabler","searchContent","event","target","value","presentPopularMovies","componentDidUpdate","componentDidMount","render","imgUrl","myPath","inputEnablerMsg","searchBar","movie","poster_path","backdrop_path","display","title","overview","vote_average","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Movie from \"../../components/Movie/Movie\";\n// import Button from \"../../components/Button/Button\";\nimport classes from \"./Movies.module.css\";\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\n// import Rating from \"../../components/Movie/Rating/Rating\";\nclass Movies extends Component {\n  state = {\n    movies: [],\n    movies_ids: [],\n    showMovies: true,\n    inputEntered: true,\n  };\n\n  componentDidUpdate() {\n    this.fetchingMovies(\"s\", false);\n  }\n  componentDidMount() {\n    // this.fetchingMovies(\"\", true);\n    this.fetchingMovies(\"s\", false);\n  }\n\n  fetchingMovies = async (\n    // urlString,\n    searchInput,\n    popCheck\n  ) => {\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = [];\n    let urlString = \"\";\n\n    //  console.log(urlString);\n    // if (searchInput !== \"\" || popCheck) {\n    // if (popCheck)\n    // urlString =\n    //   \"https://api.themoviedb.org/3/movie/now_playing?api_key=d0a9ee76df15c9c8e455000b78e70a56&language=he-IL&page=1\";\n    // else\n    urlString =\n      \"https://api.themoviedb.org/3/search/movie?query=\" +\n      searchInput +\n      \"&api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n    if (searchInput !== \"\") {\n      await fetch(urlString)\n        .then((res) => res.json())\n        .then((json) => {\n          console.log(json);\n          id_info = json.results.map((result) => {\n            return result.id; // returning id's of movies\n          });\n        })\n        .catch((error) => console.log(error));\n      // console.log(id_info);\n      this.setState({\n        movies_ids: id_info, // setting an array of id's\n      });\n      this.state.movies_ids.map(async (id, index) => {\n        movieUrl =\n          \"https://api.themoviedb.org/3/movie/\" +\n          id +\n          \"?api_key=d0a9ee76df15c9c8e455000b78e70a56&language=he-IL\"; // creating a movie from the id given\n        myMovies[index] = await fetch(movieUrl)\n          .then((res) => res.json())\n          .then((json) => {\n            // console.log(json);\n            return json; // returning movie at an index location\n          });\n        // .catch((error) => {\n        //   console.log(error);\n        // })\n      });\n\n      this.setState({\n        movies: myMovies,\n        inputEntered: true,\n      });\n      console.log(this.state.movies);\n\n      // this.setState({  });\n    } else {\n      const inputEnabler = this.state.inputEntered;\n      this.setState({ inputEntered: !inputEnabler });\n    }\n    // .catch((error) => {\n    //   console.log(error);\n    // })\n\n    // console.log(myMovies);\n  };\n\n  // fetchingPopularMovies = async () => {\n  //   let popUrl =\n  //     \"https://api.themoviedb.org/3/movie/popular?api_key=d0a9ee76df15c9c8e455000b78e70a56\";\n  //   fetch(popUrl)\n  //   .then(res => console.);\n  // };\n  searchContent = (event) => {\n    this.fetchingMovies(event.target.value, false);\n  };\n  presentPopularMovies = () => {\n    this.fetchingMovies(\"\", true);\n  };\n  // presentMovies = () => {\n  //   const doesShow = this.state.showMovies;\n  //   // this.setState({ showMovies: !doesShow });\n  // };\n\n  // getImgUrl = (baseUrl, path){\n\n  //   if(path)\n  // }\n  render() {\n    let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n\n    let movies = null;\n    let myPath = \"\";\n    let inputEnablerMsg = null;\n    let searchBar = null;\n    // if(this.state.)\n    if (this.state.inputEntered) {\n      movies = (\n        <div>\n          {this.state.movies.map((movie, index) => {\n            if (movie.poster_path) myPath = movie.poster_path;\n            else if (movie.backdrop_path) myPath = movie.backdrop_path;\n            else return <p> NO IMAGE! sorry :(</p>;\n            return (\n              <div key={movie.id} style={{ display: \"flex\" }}>\n                <Movie\n                  title={movie.title}\n                  image={imgUrl + myPath}\n                  description={movie.overview}\n                  name={movie.title}\n                  rating={movie.vote_average}\n                />\n              </div>\n            );\n          })}\n        </div>\n      );\n      console.log(movies);\n    } else {\n      inputEnablerMsg = <p>Please! enter a search input above! :)</p>;\n    }\n\n    return (\n      <div className={classes.Movies}>\n        {/* <Button name={\"Show Movies\"} myFunction={this.presentMovies} /> */}\n        {/* <input type=\"text\" onChange={this.searchContent.bind(this)} /> */}\n\n        <Searchbar onChange={this.searchContent.bind(this)}></Searchbar>\n        {movies}\n        {inputEnablerMsg}\n      </div>\n    );\n  }\n}\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}