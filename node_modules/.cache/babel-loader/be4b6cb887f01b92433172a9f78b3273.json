{"ast":null,"code":"var _jsxFileName = \"/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js\";\nimport React, { useState } from \"react\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport useFetch from \"./useFetch\";\nimport classes from \"./GeneralMovies.module.css\";\nimport No_img from \"../../../Assets/NoImg/no-image.png\";\nimport searchbar from \"../../../components/Searchbar/Searchbar\";\n\nconst GeneralMovies = props => {\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(false);\n\n  let searchInput = event => {\n    return event.target.value;\n  };\n\n  let inputEnablerMsg = null;\n  let movies = null;\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let myPath = \"\";\n  let data = null;\n  let style = null;\n  data = useFetch(props, searchInput);\n  Promise.resolve(data).then(val => {\n    if (val.length) {\n      setInputEntered(true);\n      setStateMovies(val);\n    }\n  });\n\n  if (!props.isSearched) {\n    style = {\n      display: \"flex\"\n    };\n    stateMovies.splice(8, stateMovies.length - 8);\n  }\n\n  if (inputEntered) {\n    movies = /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, stateMovies.map((movie, index) => {\n      if (movie.poster_path) {\n        myPath = movie.poster_path;\n        console.log(movie);\n      } else if (movie.backdrop_path) myPath = movie.backdrop_path;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Movie, {\n        isSearched: props.isSearched,\n        key: movie.id,\n        title: movie.title,\n        image: imgUrl + myPath,\n        description: movie.overview,\n        name: movie.title,\n        rating: movie.vote_average,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }));\n    }));\n  } else inputEnablerMsg = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 28\n    }\n  }, \"Please! enter a search input above! :)\");\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Searchbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), inputEnablerMsg, movies);\n};\n\nexport default GeneralMovies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js"],"names":["React","useState","Movie","useFetch","classes","No_img","searchbar","GeneralMovies","props","stateMovies","setStateMovies","inputEntered","setInputEntered","searchInput","event","target","value","inputEnablerMsg","movies","imgUrl","myPath","data","style","Promise","resolve","then","val","length","isSearched","display","splice","map","movie","index","poster_path","console","log","backdrop_path","id","title","overview","vote_average","alignContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport useFetch from \"./useFetch\";\nimport classes from \"./GeneralMovies.module.css\";\nimport No_img from \"../../../Assets/NoImg/no-image.png\";\nimport searchbar from \"../../../components/Searchbar/Searchbar\";\nconst GeneralMovies = (props) => {\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(false);\n  let searchInput = (event) => {\n    return event.target.value;\n  };\n  let inputEnablerMsg = null;\n  let movies = null;\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let myPath = \"\";\n  let data = null;\n  let style = null;\n\n  data = useFetch(props, searchInput);\n  Promise.resolve(data).then((val) => {\n    if (val.length) {\n      setInputEntered(true);\n      setStateMovies(val);\n    }\n  });\n  if (!props.isSearched) {\n    style = { display: \"flex\" };\n    stateMovies.splice(8, stateMovies.length - 8);\n  }\n  if (inputEntered) {\n    movies = (\n      <div style={style}>\n        {stateMovies.map((movie, index) => {\n          if (movie.poster_path) {\n            myPath = movie.poster_path;\n            console.log(movie);\n          } else if (movie.backdrop_path) myPath = movie.backdrop_path;\n\n          return (\n            <div>\n              <Movie\n                isSearched={props.isSearched}\n                key={movie.id}\n                title={movie.title}\n                image={imgUrl + myPath}\n                description={movie.overview}\n                name={movie.title}\n                rating={movie.vote_average}\n              />\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else inputEnablerMsg = <p>Please! enter a search input above! :)</p>;\n\n  return (\n    <div style={{ alignContent: \"center\" }}>\n      {/* {searchBar} */}\n      <Searchbar />\n      {inputEnablerMsg}\n      {movies}\n    </div>\n  );\n};\n\nexport default GeneralMovies;\n"]},"metadata":{},"sourceType":"module"}