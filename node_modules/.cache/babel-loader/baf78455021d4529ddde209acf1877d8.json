{"ast":null,"code":"var _jsxFileName = \"/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport SearchBar from \"../../../components/Searchbar/Searchbar\";\n\nconst GeneralMovies = props => {\n  const [stateIds, setStateIds] = useState([]);\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(true);\n  let searchInput = \"captain\"; //   const useFetch = (searchInput) => {\n  //   useEffect(() => console.log(stateIds), [stateIds]);\n\n  useEffect(async () => {\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = [];\n    let urlString = \"\";\n    if (searchInput !== \"\") urlString = props.baseSearchUrl.concat(searchInput, props.API_KEY_SEARCH);\n    await fetch(urlString) // need to give urlString\n    .then(res => res.json()).then(json => {\n      for (const [i, result] of json.results.entries()) {\n        id_info[i] = result.id;\n      }\n    }).catch(error => console.log(error));\n    setStateIds(id_info);\n\n    for (const [i, id] of id_info.entries()) {\n      movieUrl = props.baseMovieUrl + id + props.API_KEY_MOVIE;\n      myMovies[i] = await fetch(movieUrl).then(res => res.json()).then(json => {\n        return json;\n      });\n      setStateMovies(prevMovies => [...myMovies]);\n    }\n\n    console.log(myMovies);\n    setInputEntered(true);\n  }, []); //   const searchMovie = (event) =>{\n  //   }\n  //   };\n\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let movies = null;\n  let myPath = \"\";\n  let inputEnablerMsg = null;\n  let searchBar = null; // const starterFunc = () => {\n  // if(this.state.)\n  // if (props.baseSearchUrl) searchBar = <SearchBar onChange={searchMovie} />;\n\n  if (inputEntered) {\n    console.log(stateMovies);\n    movies = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, stateMovies.map((movie, index) => {\n      if (movie.poster_path) myPath = movie.poster_path;else if (movie.backdrop_path) myPath = movie.backdrop_path;else return /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }\n      }, \" NO IMAGE! sorry :(\");\n      return (\n        /*#__PURE__*/\n        // <div style={{ display: \"flex\" }}>\n        React.createElement(Movie, {\n          key: movie.id,\n          title: movie.title,\n          image: imgUrl + myPath,\n          description: movie.overview,\n          name: movie.title,\n          rating: movie.vote_average,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        }) // {console.log(movie.title)}\n        // </div>\n\n      );\n    }));\n    console.log(movies);\n  } else {\n    inputEnablerMsg = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }\n    }, \"Please! enter a search input above! :)\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, movies, searchBar);\n};\n\nexport default GeneralMovies;","map":{"version":3,"sources":["/Users/markgiliadov/my-imdb/src/containers/Movies/GenericMovies/GeneralMovies.js"],"names":["React","useEffect","useState","Movie","SearchBar","GeneralMovies","props","stateIds","setStateIds","stateMovies","setStateMovies","inputEntered","setInputEntered","searchInput","movieUrl","myMovies","id_info","urlString","baseSearchUrl","concat","API_KEY_SEARCH","fetch","then","res","json","i","result","results","entries","id","catch","error","console","log","baseMovieUrl","API_KEY_MOVIE","prevMovies","imgUrl","movies","myPath","inputEnablerMsg","searchBar","map","movie","index","poster_path","backdrop_path","title","overview","vote_average"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Movie from \"../../../components/Movie/Movie\";\nimport SearchBar from \"../../../components/Searchbar/Searchbar\";\nconst GeneralMovies = (props) => {\n  const [stateIds, setStateIds] = useState([]);\n  const [stateMovies, setStateMovies] = useState([]);\n  const [inputEntered, setInputEntered] = useState(true);\n  let searchInput = \"captain\";\n  //   const useFetch = (searchInput) => {\n  //   useEffect(() => console.log(stateIds), [stateIds]);\n  useEffect(async () => {\n    let movieUrl = \"\";\n    let myMovies = [];\n    let id_info = [];\n    let urlString = \"\";\n    if (searchInput !== \"\")\n      urlString = props.baseSearchUrl.concat(searchInput, props.API_KEY_SEARCH);\n    await fetch(urlString) // need to give urlString\n      .then((res) => res.json())\n      .then((json) => {\n        for (const [i, result] of json.results.entries()) {\n          id_info[i] = result.id;\n        }\n      })\n      .catch((error) => console.log(error));\n    setStateIds(id_info);\n    for (const [i, id] of id_info.entries()) {\n      movieUrl = props.baseMovieUrl + id + props.API_KEY_MOVIE;\n      myMovies[i] = await fetch(movieUrl)\n        .then((res) => res.json())\n        .then((json) => {\n          return json;\n        });\n      setStateMovies((prevMovies) => [...myMovies]);\n    }\n    console.log(myMovies);\n    setInputEntered(true);\n  }, []);\n  //   const searchMovie = (event) =>{\n\n  //   }\n\n  //   };\n\n  let imgUrl = \"https://image.tmdb.org/t/p/w185/\";\n  let movies = null;\n  let myPath = \"\";\n  let inputEnablerMsg = null;\n  let searchBar = null;\n  // const starterFunc = () => {\n  // if(this.state.)\n  // if (props.baseSearchUrl) searchBar = <SearchBar onChange={searchMovie} />;\n\n  if (inputEntered) {\n    console.log(stateMovies);\n    movies = (\n      <div>\n        {stateMovies.map((movie, index) => {\n          if (movie.poster_path) myPath = movie.poster_path;\n          else if (movie.backdrop_path) myPath = movie.backdrop_path;\n          else return <p key={index}> NO IMAGE! sorry :(</p>;\n          return (\n            // <div style={{ display: \"flex\" }}>\n            <Movie\n              key={movie.id}\n              title={movie.title}\n              image={imgUrl + myPath}\n              description={movie.overview}\n              name={movie.title}\n              rating={movie.vote_average}\n            />\n            // {console.log(movie.title)}\n            // </div>\n          );\n        })}\n      </div>\n    );\n    console.log(movies);\n  } else {\n    inputEnablerMsg = <p>Please! enter a search input above! :)</p>;\n  }\n\n  return (\n    <div>\n      {movies}\n      {searchBar}\n    </div>\n  );\n};\n\nexport default GeneralMovies;\n"]},"metadata":{},"sourceType":"module"}